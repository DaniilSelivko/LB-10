#include <iostream>
#include "TTime.h"
#include "QuadraticEquation.h"
#include "SwapData.h"

int main() {
    // Завдання 1: Робота зі структурою TTime
    TTime times[5] = { {12, 30, 45}, {23, 59, 59}, {24, 0, 0}, {13, 30, 60}, {22, 60, 30} };
    for (int i = 0; i < 5; ++i) {
        int checkResult = CheckTime(times[i]);
        std::cout << "CheckTime for time " << i + 1 << ": " << checkResult << std::endl;
    }

    for (int i = 0; i < 5; ++i) {
        NextHour(times[i]);
        std::cout << "Time " << i + 1 << " after NextHour: "
            << times[i].Hour << ":" << times[i].Min << ":" << times[i].Sec << std::endl;
    }

    // A. Описати структуру
    SwapData data = { 5, 10 };

    // C. Перевірка на коректність і заповнення даних
    if (ValidateData(data)) {
        // B. Реалізація обробки структури
        std::cout << "Before Swap: A = " << data.A << ", B = " << data.B << std::endl;
        Swap(data);
        std::cout << "After Swap: A = " << data.A << ", B = " << data.B << std::endl;

        // E. Виведення значень полів вихідних даних
        std::cout << "Swapped values: A = " << data.A << ", B = " << data.B << std::endl;
    }
    else {
        std::cout << "Invalid data." << std::endl;
    }

    // Завдання 2.2: Перевірка коренів квадратного рівняння
    QuadraticEquation eq = { 1, -3, 2, false, false };
    std::cout << "Equation: " << eq.A << "x^2 + " << eq.B << "x + " << eq.C << " = 0" << std::endl;
    CheckAndSetValidity(eq);
    CheckRealRoots(eq);

    std::cout << "Quadratic equation validity: " << std::boolalpha << eq.isValid << std::endl;
    if (eq.isValid) {
        std::cout << "The equation has real roots: " << std::boolalpha << eq.hasRealRoots << std::endl;
    }
    else {
        std::cout << "Invalid quadratic equation (A should not be 0)." << std::endl;
    }

    return 0;

}
